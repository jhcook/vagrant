# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

K8SV="1.21.2"
DSHV=K8SV.gsub('.', '-')

Vagrant.configure("2") do |config|
  config.vm.box = "jhcook/centos7"

  # config.vm.box_check_update = false
  config.vm.network "forwarded_port", guest: 6443, host: 6443

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    # Customize the amount of memory on the VM:
    vb.memory = "16384"
    vb.cpus = 4
  end

  config.vm.provision "shell", inline: <<-SHELL
    # https://docs.fedoraproject.org/en-US/epel/
    yum install -y epel-release yum-utils

    # https://distro.eks.amazonaws.com/users/install/kubeadm-onsite/
    # https://medium.com/@sjhuang93/在地端安裝eks-d-eeaaabb1bbca
    setenforce 0
    sed -i.orig 's|^SELINUX=.*|SELINUX=disabled|' /etc/selinux/config
    swapoff -a
    sed -i.orig 's|^/swapfile|#/swapfile|' /etc/fstab

    # EKS 1.20+ does not use dockerd, so we will use containerd
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    yum install -y iproute-tc socat conntrack-tools docker-ce-cli docker-ce containerd.io
    systemctl enable --now docker

    cat << '__EOF__' > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
__EOF__

    yum install -y kubelet-#{K8SV} kubeadm-#{K8SV} kubectl-#{K8SV} \
      --disableexcludes=kubernetes
      cat << __EOF__ > /var/lib/kubelet/kubeadm-flags.env
KUBELET_KUBEADM_ARGS="--cgroup-driver=systemd --network-plugin=cni --pod-infra-container-image=public.ecr.aws/eks-distro/kubernetes/pause:3.4.1"
__EOF__
    systemctl enable --now kubelet

    docker pull \
      public.ecr.aws/eks-distro/kubernetes/pause:v1.21.2-eks-1-21-2
    docker pull \
      public.ecr.aws/eks-distro/coredns/coredns:v1.8.3-eks-1-21-2
    docker pull \
      public.ecr.aws/eks-distro/etcd-io/etcd:v3.4.16-eks-1-21-2

    docker tag \
      public.ecr.aws/eks-distro/kubernetes/pause:v1.21.2-eks-1-21-2 \
      public.ecr.aws/eks-distro/kubernetes/pause:3.4.1
    docker tag \
      public.ecr.aws/eks-distro/coredns/coredns:v1.8.3-eks-1-21-2 \
      public.ecr.aws/eks-distro/kubernetes/coredns:v1.8.0
    docker tag \
      public.ecr.aws/eks-distro/etcd-io/etcd:v3.4.16-eks-1-21-2 \
      public.ecr.aws/eks-distro/kubernetes/etcd:3.4.13-0

    cat << __EOF__ > /etc/modules-load.d/k8s.conf
br_netfilter
__EOF__
    cat << __EOF__ > /etc/sysctl.d/99-k8s.conf 
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
__EOF__

    modprobe br_netfilter
    sysctl -p /etc/sysctl.d/99-k8s.conf
    firewall-cmd --zone=public --permanent --add-port=6443/tcp \
      --add-port=2379-2380/tcp --add-port=10250-10252/tcp

cat << __EOF__ >> /etc/hosts
10.0.2.15   centos7-vbox centos7-vbox.localdomain
__EOF__

    yum install -y kubeadm
    kubeadm init --image-repository public.ecr.aws/eks-distro/kubernetes \
      --kubernetes-version v#{K8SV}-eks-#{DSHV} \
      --apiserver-cert-extra-sans localhost \
      --control-plane-endpoint="10.0.2.15:6443"

    # Configure the client
    mkdir -p ~/.kube
    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config
    cp $HOME/.kube/config /vagrant/eks-d.kubeconfig
    sed -i 's|server:.*|server: https://localhost:6443|g' \
      /vagrant/eks-d.kubeconfig

    # Install CNI
#    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=v#{K8SV}-eks-#{DSHV}"
#    kubectl taint nodes --all node-role.kubernetes.io/master
  SHELL
end
